<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="22a6811b-323e-426c-bc1d-8afb581ed486" created="2.4.0" activeEnvironment="Default environment" name="EvaluateExcelFormulas" resourceRoot="" updated="2.4.0 2018-06-04T12:31:42Z" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:testSuite id="b20b3154-6fe8-4ce4-9c5f-f4943fac8692" name="TestSuite 1">
    <con:settings/>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="5a090a2a-2767-4313-a7d9-859df9570518" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase 1" searchProperties="true" timeout="0">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="datasource" name="DataSource" id="ab9dc334-de25-4e15-b907-95cecbbff709">
        <con:settings/>
        <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dataSource type="Excel">
            <con:configuration>
              <file>C:/Users/luciana/Desktop/test.xlsx</file>
              <worksheet>Sheet1</worksheet>
              <cell>A2</cell>
              <ignoreEmpty>false</ignoreEmpty>
              <evaluateFormulas>true</evaluateFormulas>
            </con:configuration>
          </con:dataSource>
          <con:shared>true</con:shared>
          <con:restartShared>true</con:restartShared>
          <con:property>Year</con:property>
          <con:completeLastOperation>true</con:completeLastOperation>
          <con:restartOnRun>true</con:restartOnRun>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="LogYears" id="16725de9-cc56-438b-8d6a-138bd4eaa1fd">
        <con:settings/>
        <con:config>
          <script>log.info context.expand( '${DataSource#Year}' )</script>
        </con:config>
      </con:testStep>
      <con:testStep type="datasourceloop" name="EndLoop" id="2f3a7095-898d-4299-babe-64b1a258f82d">
        <con:settings/>
        <con:config>
          <dataSourceStep>DataSource</dataSourceStep>
          <targetStep>LogYears</targetStep>
          <discardResults>true</discardResults>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:reportTemplates/>
    <con:xmlTemplates/>
    <con:xmlTemplates/>
    <con:parameters/>
    <con:parameters/>
  </con:reporting>
  <con:reporting/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>