<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="beca7365-b243-4b29-92f1-e9b4cd7dcf5c" created="2.4.0" activeEnvironment="Default environment" name="Project 1" resourceRoot="" updated="2.4.0 2018-06-04T12:31:42Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:testSuite id="4764126f-228b-43d4-b607-a3b8c0a310ba" name="TestSuite 1">
    <con:settings/>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="de938694-a4e0-43e9-a969-55b897bc015f" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="true" name="TestCase 1" searchProperties="true" timeout="0">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="httprequest" name="HTTP Request" id="f4973181-3b78-44e2-9cd9-0ab3e70c9920">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" id="57299479-a0dd-4aa6-9b4a-9c7a0dfff5e0" name="HTTP Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://google.com</con:endpoint>
          <con:request/>
          <con:assertion type="Valid HTTP Status Codes" id="5b95c77e-669f-45e5-871c-c37d6762ee23" name="The Runtime responds with a 200 status code">
            <con:settings/>
            <con:configuration>
              <codes>200</codes>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:reportTemplates/>
    <con:xmlTemplates/>
    <con:xmlTemplates/>
    <con:parameters/>
    <con:parameters/>
  </con:reporting>
  <con:reporting/>
  <con:afterRunScript><![CDATA[// Define variables for holding test suites, test cases and test steps
def testSuiteList
def testCaseList
def testStepList

/**
 * Create initial folder structure
 */

def projectDir = context.expand( '${projectDir}' )

// Create a directory inside projectDir
def reportDir = projectDir + "\\CustomHtmlReports"
new File( reportDir ).mkdir()

// Create a project report dir inside reportDir
def projectReportDir = reportDir + "\\" + project.name.replace(' ', '')
new File( projectReportDir ).mkdir()

def testSuiteDir = ''
def testCaseDir = ''
def testStepDir = ''

/**
 * Iterate through each test suite, test case and test step
 */
 // Define a variable for writting to files
def reportFile
 
testSuiteList = project.testSuiteList 
testSuiteList.each() {
	// Create test suite folder
	testSuiteDir = projectReportDir + "\\" + it.getName().replace(' ', '')
	new File( testSuiteDir ).mkdir()
	
	testCaseList = it.getTestCaseList()
	testCaseList.each() {
		testCaseDir = testSuiteDir + "\\" + it.getName().replace(' ', '')
		new File( testCaseDir ).mkdir()

		// Get a list with the contained test steps
		testStepList = it.getTestStepList()
		testStepList.each() {
			testStepDir = testCaseDir + "\\" + it.getName().replace(' ', '')
			new File( testStepDir ).mkdir()

			reportFile = new File(testStepDir + "\\report.html")
			reportFile.text = '''<!DOCTYPE html><html><head><style>html,body{margin:0;padding:0;}html{height:100%;}body{height:98%;}h1{font-size:20px;}h2{font-size:16px;}.column{float:left;border:solid gray 1px;height:90%;margin-left:4px;padding:5px;}.assertion_container{margin:4px;background-color:white;border:solid gray 1px;width:95%;padding:4px;}.assertion_details{margin-left:60px;}.assertion_name{color:red;}#content_wrapper{width:100%;height:60%;}#request{background-color:#F0F0F0;width:48%;height:100%;overflow:auto;}#response{background-color:#F0F0F0;width:48%;height:100%;overflow:auto;}#assertions_wrapper_container{background-color:#F0F0F0;float:left;margin-top:4px;margin-left:4px;padding:5px;border:solid gray 1px;height:30%;width:97%;overflow:scroll;}</style></head>
  <body>
    <h1>TestStep1 from TestCaseA from TestSuiteA</h1>
    <div id="content_wrapper">
      <div id="request" class="column">
        <div id="request_title">
          <h2>Request</h2>
        </div>
        <div id="request_content">
          <pre>
GET http://www.google.com/ HTTP/1.1
Accept-Encoding: gzip,deflate
Content-Length: 0
Host: google.com
Connection: Keep-Alive
User-Agent: Apache-HttpClient/4.5.2 (Java/1.8.0_162)
          </pre>
        </div>
      </div>
      <div id="response" class="column">
        <div id="response_title">
          <h2>Response</h2>
        </div>
        <div id="response_content">
          <pre>
HTTP/1.1 200 OK
Date: Thu, 11 Oct 2018 12:04:12 GMT
Expires: -1
Cache-Control: private, max-age=0
Content-Type: text/html; charset=ISO-8859-1
P3P: CP="This is not a P3P policy! See g.co/p3phelp for more info."
Server: gws
X-XSS-Protection: 1; mode=block
X-Frame-Options: SAMEORIGIN
Set-Cookie: 1P_JAR=2018-10-11-12; expires=Sat, 10-Nov-2018 12:04:12 GMT; path=/; domain=.google.com
Set-Cookie: NID=141=ZM-PlxR5kKDYuntvsA6ZdGRLCP3FvCP5PrSEIL8FZgQko_T6f6zXRtS0I_JZAucXIIK8d2B11x5Vme1Vdb-nL9pAHX2kITLBoP4GysxWPBlF1hrp0Rl5MX5m7Ie3a_l5; expires=Fri, 12-Apr-2019 12:04:12 GMT; path=/; domain=.google.com; HttpOnly
          </pre>
        </div>
      </div>
    </div>
    <div id="assertions_wrapper_container">
      <div id="assertions_title">
        <h2>Assertions</h2>
      </div>
      <div class="assertion_container">
        <div class="assertion_name"><b>FAIL</b> Valid HTTP Status Codes</div>
        <div class="assertion_details"><t/><i>Response status code 200 is not in acceptable list of status codes</i></div>
      </div>
      <div class="assertion_container">
        <div class="assertion_name"><b>FAIL</b> Simple contains condition</div>
        <div class="assertion_details"><t/><i>Missing the text 'token' in response</i></div>
      </div>
    </div>
  </body>
</html>
'''
reportFile.text = "test"
		}
	}
}]]></con:afterRunScript>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>